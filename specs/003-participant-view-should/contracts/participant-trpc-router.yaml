openapi: 3.0.0
info:
  title: Participant tRPC Router API
  description: tRPC router for anonymous participant management in discussions
  version: 1.0.0

components:
  schemas:
    InvitationValidationInput:
      type: object
      required:
        - discussionId
        - token
      properties:
        discussionId:
          type: string
          description: Discussion ID from URL path
        token:
          type: string
          description: JWT invitation token from query parameter
    
    InvitationValidationOutput:
      type: object
      required:
        - valid
        - discussion
      properties:
        valid:
          type: boolean
          description: Whether the invitation is valid and usable
        discussion:
          $ref: '#/components/schemas/DiscussionInfo'
        error:
          type: string
          description: Error message if invalid (expired, not found, etc.)
    
    DiscussionInfo:
      type: object
      required:
        - id
        - title
        - status
        - participantCount
      properties:
        id:
          type: string
        title:
          type: string
        status:
          type: string
          enum: [active, completed, cancelled]
        participantCount:
          type: integer
          description: Current number of active participants
        maxParticipants:
          type: integer
          nullable: true
          description: Maximum allowed participants (null = unlimited)
    
    ParticipantJoinInput:
      type: object
      required:
        - discussionId
        - displayName
        - sessionId
      properties:
        discussionId:
          type: string
        displayName:
          type: string
          minLength: 1
          maxLength: 50
          description: Participant's chosen display name
        sessionId:
          type: string
          description: Browser session identifier
        ipAddress:
          type: string
          description: Client IP for moderation (server-detected)
    
    ParticipantJoinOutput:
      type: object
      required:
        - participant
        - messageHistory
      properties:
        participant:
          $ref: '#/components/schemas/Participant'
        messageHistory:
          type: array
          items:
            $ref: '#/components/schemas/MessageSummary'
          description: Recent message history for context
    
    Participant:
      type: object
      required:
        - id
        - discussionId
        - displayName
        - joinedAt
      properties:
        id:
          type: string
        discussionId:
          type: string
        displayName:
          type: string
        joinedAt:
          type: string
          format: date-time
        leftAt:
          type: string
          format: date-time
          nullable: true
    
    MessageSummary:
      type: object
      required:
        - id
        - content
        - senderName
        - senderType
        - createdAt
      properties:
        id:
          type: string
        content:
          type: string
        senderName:
          type: string
        senderType:
          type: string
          enum: [user, participant, system]
        createdAt:
          type: string
          format: date-time
    
    ParticipantLeaveInput:
      type: object
      required:
        - participantId
      properties:
        participantId:
          type: string
    
    MessageHistoryInput:
      type: object
      required:
        - discussionId
      properties:
        discussionId:
          type: string
        before:
          type: string
          description: Message ID cursor for pagination (get messages before this)
        limit:
          type: integer
          minimum: 1
          maximum: 50
          default: 20
          description: Number of messages to retrieve
    
    MessageHistoryOutput:
      type: object
      required:
        - messages
        - hasMore
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/MessageSummary'
          description: Messages in chronological order (oldest first)
        hasMore:
          type: boolean
          description: Whether there are more messages available before this batch

paths:
  /trpc/participant.validateInvitation:
    post:
      summary: Validate invitation link and get discussion info
      description: |
        Validates a JWT invitation token for a discussion.
        Returns discussion details if valid, error if invalid/expired.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitationValidationInput'
      responses:
        '200':
          description: Validation result (may be valid or invalid)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitationValidationOutput'
        '400':
          description: Invalid request format
  
  /trpc/participant.join:
    post:
      summary: Join a discussion as an anonymous participant
      description: |
        Adds a participant to an active discussion.
        Returns participant info and recent message history.
        Validates invitation token internally.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParticipantJoinInput'
      responses:
        '200':
          description: Successfully joined discussion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParticipantJoinOutput'
        '400':
          description: Invalid input or discussion not available
        '403':
          description: Discussion at capacity or not accepting participants
  
  /trpc/participant.leave:
    post:
      summary: Leave a discussion as a participant
      description: |
        Marks participant as having left the discussion.
        Participant can rejoin if they have valid invitation.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParticipantLeaveInput'
      responses:
        '200':
          description: Successfully left discussion
        '404':
          description: Participant not found
  
  /trpc/participant.getMessageHistory:
    post:
      summary: Get paginated message history for a discussion
      description: |
        Retrieves message history with cursor-based pagination.
        Used for lazy loading earlier messages.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageHistoryInput'
      responses:
        '200':
          description: Message history page
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageHistoryOutput'
        '404':
          description: Discussion not found